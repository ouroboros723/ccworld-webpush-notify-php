; スタックトレースで引数を表示
zend.exception_ignore_args = on
; PHPのバージョンやOS情報などを表示
expose_php = on
; スクリプトの最大実行時間を30秒
; とりあえずこれぐらいで完走したい
max_execution_time = 30
; 入力変数の最大数（GET, POSTなど）
max_input_vars = 1000
; すべてのPHPエラーを表示
error_reporting = E_ALL
; エラーを画面に表示
display_errors = on
; PHPの起動時のエラーも表示
display_startup_errors = on
; エラーをログに記録
log_errors = on
; Docker のログに出す
error_log = /dev/stderr
; 文字コード
default_charset = UTF-8
; この辺りは開発環境で制限されるのも嫌なので大きくとる
; アップロード可能なファイルサイズの最大値を1G
upload_max_filesize = 1G
; POSTデータの最大サイズを無制限
post_max_size = 0
; メモリ使用量の上限を無制限
memory_limit = -1
[Date]
; タイムゾーンを環境変数から設定
date.timezone = ${TZ}
[mysqlnd]
; MySQL Native Driverのメモリ使用統計
mysqlnd.collect_memory_statistics = on
[Assertion]
; アサーションを有効にする
zend.assertions = 1
[mbstring]
; mbstringの言語設定を日本語にする
mbstring.language = Japanese
[opcache]
; OPcacheを有効にする。開発時に遅いのはやだ
opcache.enable=1
; 最適化レベルを設定
opcache.optimization_level=0x7FFEBFFF
; タイムスタンプを検証する。1なのはファイル変更を常に反映するため
opcache.validate_timestamps=1
; OPcacheの最大メモリ使用量は128MB
opcache.memory_consumption=128
; interned stringsのバッファサイズは8MB
opcache.interned_strings_buffer=8
; キャッシュするスクリプトの最大数は4000
opcache.max_accelerated_files=4000
; 高速なシャットダウン
opcache.fast_shutdown=1
; CLIでもOPcacheを有効にする
opcache.enable_cli=1
; スクリプトの再検証頻度を0（常に検証）
opcache.revalidate_freq=0

[xdebug]
xdebug.mode = debug
xdebug.start_with_request = yes
xdebug.client_host = host.docker.internal
xdebug.client_port = 9003
xdebug.log = /tmp/xdebug.log
xdebug.idekey = "PHPSTORM"
